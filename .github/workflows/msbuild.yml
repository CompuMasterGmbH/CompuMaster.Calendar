name: MSBuild Windows

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Debug

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}} "/p:OutputPath=${{env.GITHUB_WORKSPACE}}/artifacts"

    - name: Publish Artifacts
      uses: actions/upload-artifact@v2
      with:
        path: artifacts/

  test:
    needs: build
    runs-on: windows-latest

    # the build-and-test job might be skipped, we don't need to run this job then
    #if: success() || failure()

    steps:
      - name: Install NUnit.ConsoleRunner
        run: nuget install NUnit.ConsoleRunner -Version 3.12.0

      - name: Download JUnit Xslt
        run: curl https://raw.githubusercontent.com/jochenwezel/nunit-transforms-to-junit-gitlab-compatible/master/nunit3-junit/nunit3-junit.xslt > nunit3-junit.xslt

      - name: Download Artifacts
        uses: actions/download-artifact@v2
	path: artifacts/

      - name: Check directory listing (artifacts test)
        run: dir
        if: always()

      - name: Check directory listing for artifacts
        run: dir artifacts
        if: always()

      - name: Run Unit Tests
        run: ./NUnit.ConsoleRunner.3.12.0/tools/nunit3-console.exe ./CompuMaster.Test.Calendar/bin/CompuMaster.Test.Calendar.dll --result=TestResult.xml "--result=TestResult.JUnit.xml;transform=nunit3-junit.xslt"
	files: |
		./artifacts/*

      - name: Check current directory
        run: pwd
        if: always()

      - name: Check directory listing 
        run: dir
        if: always()

      - name: Publish Unit Test Results
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: NUnit Test Results
          path: TestResult.JUnit.xml

#      - name: Publish Unit Test Results
#        uses: EnricoMi/publish-unit-test-result-action@v1
#        run: Publish Unit Test Results

#      - name: Upload Unit Test Results
#        if: always()
#        uses: actions/upload-artifact@v2
#        with:
#          name: Unit Test Results (Python ${{ matrix.python-version }})
#          path: pytest.xml
#
#      - name: Download Artifacts
#        uses: actions/download-artifact@v2
#        with:
#          path: artifacts
