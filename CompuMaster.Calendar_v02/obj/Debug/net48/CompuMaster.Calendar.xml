<?xml version="1.0"?>
<doc>
<assembly>
<name>
CompuMaster.Calendar_v02
</name>
</assembly>
<members>
<member name="M:CompuMaster.Calendar.DateInformation.WeekOfYear(System.DateTime)">
 -----------------------------------------------------------------------------
 <summary>
     Lookup the calendar week of the year based on the current culture set
 </summary>
 <param name="dateValue">A date value whose week number is required</param>
 <returns>A week number</returns>
 <remarks>
 </remarks>
 <history>
 	[adminwezel]	31.10.2005	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:CompuMaster.Calendar.DateInformation.WeekOfYear(System.DateTime,System.Globalization.CultureInfo)">
 -----------------------------------------------------------------------------
 <summary>
     Lookup the calendar week of the year based on the current culture set
 </summary>
 <param name="dateValue">A date value whose week number is required</param>
 <param name="cultureInfo">The culture information which shall be the base of all date calculations</param>
 <returns>A week number</returns>
 <remarks>
 </remarks>
 <history>
 	[adminwezel]	31.10.2005	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:CompuMaster.Calendar.DateInformation.FirstDateOfWeek(System.Int32,System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
     Lookup the first date of a week
 </summary>
 <param name="year">The year</param>
 <param name="week">The week</param>
 <returns>The date of the first day of the week</returns>
 <remarks>
 </remarks>
 <history>
 	[adminwezel]	31.10.2005	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:CompuMaster.Calendar.DateInformation.FirstDateOfWeek(System.Int32,System.Int32,System.Globalization.CultureInfo)">
 -----------------------------------------------------------------------------
 <summary>
     Lookup the first date of a week
 </summary>
 <param name="year">The year</param>
 <param name="week">The week</param>
 <param name="cultureInfo">The culture information which shall be the base of all date calculations</param>
 <returns>The date of the first day of the week</returns>
 <remarks>
 </remarks>
 <history>
 	[adminwezel]	31.10.2005	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:CompuMaster.Calendar.DateInformation.LastDateOfWeek(System.Int32,System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
     Lookup the last date of a week
 </summary>
 <param name="year">The year</param>
 <param name="week">The week</param>
 <returns>The date of the last day of the week on 0 o'clock (not 24 o'clock!)</returns>
 <remarks>
 </remarks>
 <history>
 	[adminwezel]	31.10.2005	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:CompuMaster.Calendar.DateInformation.LastDateOfWeek(System.Int32,System.Int32,System.Globalization.CultureInfo)">
 -----------------------------------------------------------------------------
 <summary>
     Lookup the last date of a week
 </summary>
 <param name="year">The year</param>
 <param name="week">The week</param>
 <param name="cultureInfo">The culture information which shall be the base of all date calculations</param>
 <returns>The date of the last day of the week on 0 o'clock (not 24 o'clock!)</returns>
 <remarks>
 </remarks>
 <history>
 	[adminwezel]	31.10.2005	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="T:CompuMaster.Calendar.DateInformation.Accuracy">
 -----------------------------------------------------------------------------
 <summary>
 The precision of a datetime representation which may have got an influence on rounded values
 </summary>
 <remarks>
 Some database or application systems don't fully support the high precision of the .NET framework's datetime value. In this case, those systems may round the datetime value to store/handle the value. But you may want to prevent roundings to the next day.
 <example>You want to filter for records till the end of a day, but don't want records from the next day with time 00:00:00 because of any roundings.</example>
 </remarks>
 <history>
 	[wezel]	13.12.2010	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:CompuMaster.Calendar.DateInformation.BeginOfYear(System.DateTime)">
 -----------------------------------------------------------------------------
 <summary>
 The first moment of a year
 </summary>
 <param name="value"></param>
 <returns></returns>
 <remarks>
 </remarks>
 <history>
 	[wezel]	13.12.2010	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:CompuMaster.Calendar.DateInformation.EndOfYear(System.DateTime,CompuMaster.Calendar.DateInformation.Accuracy)">
 -----------------------------------------------------------------------------
 <summary>
 The last moment of a year
 </summary>
 <param name="value"></param>
 <param name="precision"></param>
 <returns></returns>
 <remarks>
 </remarks>
 <history>
 	[wezel]	13.12.2010	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:CompuMaster.Calendar.DateInformation.BeginOfMonth(System.DateTime)">
 -----------------------------------------------------------------------------
 <summary>
 The first moment of a month
 </summary>
 <param name="value"></param>
 <returns></returns>
 <remarks>
 </remarks>
 <history>
 	[wezel]	13.12.2010	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:CompuMaster.Calendar.DateInformation.EndOfMonth(System.DateTime,CompuMaster.Calendar.DateInformation.Accuracy)">
 -----------------------------------------------------------------------------
 <summary>
 The last moment of a month
 </summary>
 <param name="value"></param>
 <param name="precision"></param>
 <returns></returns>
 <remarks>
 </remarks>
 <history>
 	[wezel]	13.12.2010	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:CompuMaster.Calendar.DateInformation.BeginOfDay(System.DateTime)">
 -----------------------------------------------------------------------------
 <summary>
 The first moment of a day
 </summary>
 <param name="value"></param>
 <returns></returns>
 <remarks>
 </remarks>
 <history>
 	[wezel]	13.12.2010	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:CompuMaster.Calendar.DateInformation.EndOfDay(System.DateTime,CompuMaster.Calendar.DateInformation.Accuracy)">
 -----------------------------------------------------------------------------
 <summary>
 The last moment of a day
 </summary>
 <param name="value"></param>
 <param name="precision"></param>
 <returns></returns>
 <remarks>
 </remarks>
 <history>
 	[wezel]	13.12.2010	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="T:CompuMaster.Calendar.Month">
 <summary>
 A representation for a month period for years with 12 months
 </summary>
 <remarks></remarks>
</member>
<member name="M:CompuMaster.Calendar.Month.Now">
 <summary>
 The current month
 </summary>
 <returns></returns>
</member>
<member name="P:CompuMaster.Calendar.Month.Year">
 <summary>
 The year of the month
 </summary>
</member>
<member name="P:CompuMaster.Calendar.Month.Month">
 <summary>
 The number of the month (Jan = 1, Dec = 12)
 </summary>
 <value></value>
 <remarks>
 </remarks>
</member>
<member name="M:CompuMaster.Calendar.Month.ToString">
 <summary>
 Text formatting with yyyy-MM
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:CompuMaster.Calendar.Month.ToString(System.String)">
 <summary>
 Format the month with a typical datetime format string using the begin date of the period
 </summary>
 <param name="format">YYYY for 4-digit year, YY for 2-digit year, MMMM for long month name, MMM for month name abbreviation, MM for always-2-digit month number, M for month number with 1 or 2 digits, UUU for unique short name of month (might depend on system platform), CCC for a custom set of expected names from January to December</param>
 <returns></returns>
 <remarks>
 </remarks>
</member>
<member name="M:CompuMaster.Calendar.Month.ToString(System.IFormatProvider)">
 <summary>
 Format the month with a typical datetime format using the given format provider and using the begin date of the period
 </summary>
 <param name="provider"></param>
 <returns></returns>
 <remarks>
 </remarks>
</member>
<member name="M:CompuMaster.Calendar.Month.ToString(System.String,System.IFormatProvider)">
 <summary>
 Format the month with a typical datetime format string and the given format provider using the begin date of the period
 </summary>
 <param name="format">YYYY for 4-digit year, YY for 2-digit year, MMMM for long month name, MMM for month name abbreviation, MM for always-2-digit month number, M for month number with 1 or 2 digits, UUU for unique short name of month (might depend on system platform), CCC for a custom set of expected names from January to December</param>
 <param name="provider"></param>
 <returns></returns>
 <remarks>
 </remarks>
</member>
<member name="M:CompuMaster.Calendar.Month.ToString(System.String,System.IFormatProvider,System.String[])">
 <summary>
 Format the month with a typical datetime format string and the given format provider using the begin date of the period
 </summary>
 <param name="format">YYYY for 4-digit year, YY for 2-digit year, MMMM for long month name, MMM for month name abbreviation, MM for always-2-digit month number, M for month number with 1 or 2 digits, UUU for unique short name of month (might depend on system platform), CCC for a custom set of expected names from January to December</param>
 <param name="provider"></param>
 <param name="customMonths">An array of 12 strings reprensenting the expected month names, starting with January up to December</param>
 <returns></returns>
 <remarks>
 </remarks>
</member>
<member name="M:CompuMaster.Calendar.Month.PreservingStringSplit(System.String,System.String[])">
 <summary>
 Split a string but keep the separators as items
 </summary>
 <param name="value"></param>
 <param name="separators"></param>
 <returns></returns>
</member>
<member name="M:CompuMaster.Calendar.Month.Parse(System.String,System.String,System.Globalization.CultureInfo)">
 <summary>
 Parse the month from a defined datetime format string and the given culture
 </summary>
 <param name="format">YYYY for 4-digit year, YY for 2-digit year, MMMM for long month name, MMM for month name abbreviation, MM for always-2-digit month number, M for month number with 1 or 2 digits, UUU for unique short name of month (might depend on system platform), CCC for a custom set of expected names from January to December</param>
 <param name="culture"></param>
 <returns></returns>
 <remarks>
 </remarks>
</member>
<member name="M:CompuMaster.Calendar.Month.Parse(System.String,System.String,System.Globalization.CultureInfo,System.String[])">
 <summary>
 Parse the month from a defined datetime format string and the given culture
 </summary>
 <param name="format">YYYY for 4-digit year, YY for 2-digit year, MMMM for long month name, MMM for month name abbreviation, MM for always-2-digit month number, M for month number with 1 or 2 digits, UUU for unique short name of month (might depend on system platform), CCC for a custom set of expected names from January to December</param>
 <param name="culture"></param>
 <param name="customMonths">An array of 12 strings reprensenting the expected month names, starting with January up to December</param>
 <returns></returns>
 <remarks>
 </remarks>
</member>
<member name="M:CompuMaster.Calendar.Month.TryParse(System.String,CompuMaster.Calendar.Month@)">
 <summary>
 Try to parse the month from datetime format YYYY-MM
 </summary>
 <returns></returns>
 <remarks>
 </remarks>
</member>
<member name="M:CompuMaster.Calendar.Month.TryParse(System.String,System.String,System.Globalization.CultureInfo,CompuMaster.Calendar.Month@)">
 <summary>
 Try to parse the month from a defined datetime format string and the given culture
 </summary>
 <param name="format">YYYY for 4-digit year, YY for 2-digit year, MMMM for long month name, MMM for month name abbreviation, MM for always-2-digit month number, M for month number with 1 or 2 digits, UUU for unique short name of month (might depend on system platform), CCC for a custom set of expected names from January to December</param>
 <param name="culture"></param>
 <returns></returns>
 <remarks>
 </remarks>
</member>
<member name="M:CompuMaster.Calendar.Month.TryParse(System.String,System.String,System.Globalization.CultureInfo,System.String[],CompuMaster.Calendar.Month@)">
 <summary>
 Try to parse the month from a defined datetime format string and the given culture
 </summary>
 <param name="format">YYYY for 4-digit year, YY for 2-digit year, MMMM for long month name, MMM for month name abbreviation, MM for always-2-digit month number, M for month number with 1 or 2 digits, UUU for unique short name of month (might depend on system platform), CCC for a custom set of expected names from January to December</param>
 <param name="culture"></param>
 <param name="customMonths">An array of 12 strings reprensenting the expected month names, starting with January up to December</param>
 <returns></returns>
 <remarks>
 </remarks>
</member>
<member name="M:CompuMaster.Calendar.Month.ParseFromUniqueShortName(System.String)">
 <summary>
 Parse the month from a format string UUU/YYYY
 </summary>
 <returns></returns>
 <remarks>
 </remarks>
</member>
<member name="M:CompuMaster.Calendar.Month.EncodeForRegEx(System.String[])">
 <summary>
 Encode all array elements for RegEx
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:CompuMaster.Calendar.Month.UniqueMonthShortNames">
 <summary>
 All short names in format UUU where UUU equals MMM (English names)
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:CompuMaster.Calendar.Month.UniqueMonthShortName(System.Int32)">
 <summary>
 A short name in format UUU where UUU equals MMM (English names)
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:CompuMaster.Calendar.Month.UniqueShortName">
 <summary>
 A short name in format UUU/YYYY where UUU equals MMM (English names)
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:CompuMaster.Calendar.Month.MonthShortName(System.String)">
 <summary>
 A short name in format MMM/YYYY of specified culture
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:CompuMaster.Calendar.Month.MonthShortName(System.Globalization.CultureInfo)">
 <summary>
 A short name in format MMM/YYYY of specified culture
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:CompuMaster.Calendar.Month.MonthName(System.String)">
 <summary>
 A full month name in format MMMM/YYYY of specified culture
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:CompuMaster.Calendar.Month.MonthName(System.Globalization.CultureInfo)">
 <summary>
 A full month name in format MMMM/YYYY of specified culture
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:CompuMaster.Calendar.Month.Equals(CompuMaster.Calendar.Month)">
 <summary>
 Equals method for period classes
 </summary>
 <param name="value"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:CompuMaster.Calendar.Month.op_Equality(CompuMaster.Calendar.Month,CompuMaster.Calendar.Month)">
 <summary>
 Equals operator for Month classes
 </summary>
 <param name="value1"></param>
 <param name="value2"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:CompuMaster.Calendar.Month.op_Inequality(CompuMaster.Calendar.Month,CompuMaster.Calendar.Month)">
 <summary>
 Not-Equals operator for Month classes
 </summary>
 <param name="value1"></param>
 <param name="value2"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:CompuMaster.Calendar.Month.op_LessThan(CompuMaster.Calendar.Month,CompuMaster.Calendar.Month)">
 <summary>
 Smaller than operator for Month classes
 </summary>
 <param name="value1"></param>
 <param name="value2"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:CompuMaster.Calendar.Month.op_GreaterThan(CompuMaster.Calendar.Month,CompuMaster.Calendar.Month)">
 <summary>
 Greater than operator for Month classes
 </summary>
 <param name="value1"></param>
 <param name="value2"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:CompuMaster.Calendar.Month.op_LessThanOrEqual(CompuMaster.Calendar.Month,CompuMaster.Calendar.Month)">
 <summary>
 Smaller than operator for Month classes
 </summary>
 <param name="value1"></param>
 <param name="value2"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:CompuMaster.Calendar.Month.op_GreaterThanOrEqual(CompuMaster.Calendar.Month,CompuMaster.Calendar.Month)">
 <summary>
 Greater than operator for Month classes
 </summary>
 <param name="value1"></param>
 <param name="value2"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:CompuMaster.Calendar.Month.op_Subtraction(CompuMaster.Calendar.Month,CompuMaster.Calendar.Month)">
 <summary>
 The number of total months between two values
 </summary>
 <param name="value1"></param>
 <param name="value2"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:CompuMaster.Calendar.Month.NextPeriod">
 <summary>
 Create an instance of the following period
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:CompuMaster.Calendar.Month.PreviousPeriod">
 <summary>
 Create an instance of the previous period
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:CompuMaster.Calendar.Month.BeginOfPeriod">
 <summary>
 The begin of the month
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:CompuMaster.Calendar.Month.EndOfPeriod(CompuMaster.Calendar.DateInformation.Accuracy)">
 <summary>
 The end of the month
 </summary>
 <param name="precision"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:CompuMaster.Calendar.Month.BeginOfYear">
 <summary>
 The begin of the year
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:CompuMaster.Calendar.Month.EndOfYear">
 <summary>
 The end of the year
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:CompuMaster.Calendar.Month.CompareTo(System.Object)">
 <summary>
 Compares a value to the current instance value
 </summary>
 <param name="obj"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:CompuMaster.Calendar.Month.CompareTo(CompuMaster.Calendar.Month)">
 <summary>
 Compares a value to the current instance value
 </summary>
 <param name="value"></param>
 <returns>-1 if value is smaller, +1 if value is greater, 0 if value equals</returns>
 <remarks></remarks>
</member>
<member name="T:CompuMaster.Calendar.MonthNumber">
 <summary>
     A data structure for a complete month number
 </summary>
</member>
<member name="M:CompuMaster.Calendar.MonthNumber.AddMonths(System.Int32)">
 <summary>
 Add months to a MonthNumber, result will always be with a month no. between 1 and 12
 </summary>
 <param name="value"></param>
 <returns></returns>
</member>
<member name="M:CompuMaster.Calendar.MonthNumber.op_LessThan(CompuMaster.Calendar.MonthNumber,CompuMaster.Calendar.MonthNumber)">
 <summary>
 Smaller than operator for MonthNumber classes
 </summary>
 <param name="value1"></param>
 <param name="value2"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:CompuMaster.Calendar.MonthNumber.op_GreaterThan(CompuMaster.Calendar.MonthNumber,CompuMaster.Calendar.MonthNumber)">
 <summary>
 Greater than operator for MonthNumber classes
 </summary>
 <param name="value1"></param>
 <param name="value2"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:CompuMaster.Calendar.MonthNumber.op_LessThanOrEqual(CompuMaster.Calendar.MonthNumber,CompuMaster.Calendar.MonthNumber)">
 <summary>
 Smaller than operator for MonthNumber classes
 </summary>
 <param name="value1"></param>
 <param name="value2"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:CompuMaster.Calendar.MonthNumber.op_GreaterThanOrEqual(CompuMaster.Calendar.MonthNumber,CompuMaster.Calendar.MonthNumber)">
 <summary>
 Greater than operator for MonthNumber classes
 </summary>
 <param name="value1"></param>
 <param name="value2"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:CompuMaster.Calendar.MonthNumber.ToString">
 <summary>
 Text formatting with MM
 </summary>
 <returns></returns>
</member>
<member name="M:CompuMaster.Calendar.MonthNumber.ToString(System.String)">
 <summary>
 Format the month with a typical datetime format string using the begin date of the period
 </summary>
 <param name="format"></param>
 <returns></returns>
 <remarks>
 </remarks>
</member>
<member name="M:CompuMaster.Calendar.MonthNumber.ToString(System.String,System.Globalization.CultureInfo)">
 <summary>
 Format the month with a typical datetime format string and the given format provider using the begin date of the period
 </summary>
 <param name="format">YYYY for 4-digit year, YY for 2-digit year, MMMM for long month name, MMM for month name abbreviation, MM for always-2-digit month number, M for month number with 1 or 2 digits</param>
 <param name="culture"></param>
 <returns></returns>
 <remarks>
 </remarks>
</member>
<member name="M:CompuMaster.Calendar.MonthNumber.UniqueShortName">
 <summary>
 A short name in format MMM/yyyy (English names)
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:CompuMaster.Calendar.MonthNumber.NextMonth">
 <summary>
 Create an instance of the following period
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:CompuMaster.Calendar.MonthNumber.PreviousMonth">
 <summary>
 Create an instance of the previous period
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:CompuMaster.Calendar.MonthNumber.CompareTo(System.Object)">
 <summary>
 Compares a value to the current instance value
 </summary>
 <param name="obj"></param>
 <returns></returns>
</member>
<member name="M:CompuMaster.Calendar.MonthNumber.CompareTo(CompuMaster.Calendar.MonthNumber)">
 <summary>
 Compares a value to the current instance value
 </summary>
 <param name="value"></param>
 <returns>-1 if value is smaller, +1 if value is greater, 0 if value equals</returns>
</member>
<member name="T:CompuMaster.Calendar.WeekNumber">
 <summary>
     A data structure for a complete week number inclusive the year information which is related to a pure week number
 </summary>
</member>
<member name="M:CompuMaster.Calendar.WeekNumber.Add(System.Int32,System.Int32)">
 <summary>
 Add years and weeks to a WeekNumber, result will always be with a week no. between 0 and 99
 </summary>
 <param name="years"></param>
 <param name="weeks"></param>
 <returns></returns>
</member>
<member name="M:CompuMaster.Calendar.WeekNumber.Add(CompuMaster.Calendar.WeekNumberSpan)">
 <summary>
 Add years and weeks to a WeekNumber, result will always be with a week no. between 0 and 99
 </summary>
 <param name="span"></param>
 <returns></returns>
</member>
<member name="M:CompuMaster.Calendar.WeekNumber.AddYears(System.Int32)">
 <summary>
 Add years to a WeekNumber, result will always keep the week unchanged 
 </summary>
 <param name="value"></param>
 <returns></returns>
</member>
<member name="M:CompuMaster.Calendar.WeekNumber.AddWeeks(System.Int32)">
 <summary>
 Add weeks to a WeekNumber, result will always be with a week no. between 0 and 99
 </summary>
 <param name="value"></param>
 <returns></returns>
</member>
<member name="M:CompuMaster.Calendar.WeekNumber.op_LessThan(CompuMaster.Calendar.WeekNumber,CompuMaster.Calendar.WeekNumber)">
 <summary>
 Smaller than operator for WeekNumber classes
 </summary>
 <param name="value1"></param>
 <param name="value2"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:CompuMaster.Calendar.WeekNumber.op_GreaterThan(CompuMaster.Calendar.WeekNumber,CompuMaster.Calendar.WeekNumber)">
 <summary>
 Greater than operator for WeekNumber classes
 </summary>
 <param name="value1"></param>
 <param name="value2"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:CompuMaster.Calendar.WeekNumber.op_LessThanOrEqual(CompuMaster.Calendar.WeekNumber,CompuMaster.Calendar.WeekNumber)">
 <summary>
 Smaller than operator for WeekNumber classes
 </summary>
 <param name="value1"></param>
 <param name="value2"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:CompuMaster.Calendar.WeekNumber.op_GreaterThanOrEqual(CompuMaster.Calendar.WeekNumber,CompuMaster.Calendar.WeekNumber)">
 <summary>
 Greater than operator for WeekNumber classes
 </summary>
 <param name="value1"></param>
 <param name="value2"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:CompuMaster.Calendar.WeekNumber.op_Subtraction(CompuMaster.Calendar.WeekNumber,CompuMaster.Calendar.WeekNumber)">
 <summary>
 The time span of years and weeks between two values
 </summary>
 <param name="value1"></param>
 <param name="value2"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:CompuMaster.Calendar.WeekNumber.NextWeek">
 <summary>
 Create an instance of the following period
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:CompuMaster.Calendar.WeekNumber.PreviousWeek">
 <summary>
 Create an instance of the previous period
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:CompuMaster.Calendar.WeekNumber.ZeroWeek">
 <summary>
 Create an instance of same year, but week part is zeroed
 </summary>
 <returns></returns>
</member>
<member name="M:CompuMaster.Calendar.WeekNumber.FirstWeek">
 <summary>
 Create an instance of same year, but first week
 </summary>
 <returns></returns>
</member>
<member name="M:CompuMaster.Calendar.WeekNumber.CompareTo(System.Object)">
 <summary>
 Compares a value to the current instance value
 </summary>
 <param name="obj"></param>
 <returns></returns>
</member>
<member name="M:CompuMaster.Calendar.WeekNumber.CompareTo(CompuMaster.Calendar.WeekNumber)">
 <summary>
 Compares a value to the current instance value
 </summary>
 <param name="value"></param>
 <returns>-1 if value is smaller, +1 if value is greater, 0 if value equals</returns>
</member>
<member name="T:CompuMaster.Calendar.WeekNumberSpan">
 <summary>
 A structure providing delta information between 2 WeekNumber objects
 </summary>
</member>
<member name="T:CompuMaster.Calendar.WorkDays">
 <summary>
 Provides several methods for working with work days
 </summary>
 <remarks>
 </remarks>
 <history>
 	[wezel]	13.12.2010	Created
 </history>
</member>
<member name="M:CompuMaster.Calendar.WorkDays.CountTypicalWorkDays(System.DateTime,System.DateTime)">
 -----------------------------------------------------------------------------
 <summary>
 Count the number of weekdays Monday to Friday, also known as workdays
 </summary>
 <param name="fromDate">The begin of the period</param>
 <param name="toDate">The last inclusive day of the period</param>
 <returns></returns>
 <remarks>
 </remarks>
 <history>
 	[wezel]	10.02.2009	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:CompuMaster.Calendar.WorkDays.CountTypicalFreeDays(System.DateTime,System.DateTime)">
 -----------------------------------------------------------------------------
 <summary>
 Count the number of weekdays Saturday to Sunday, also known as free days
 </summary>
 <param name="fromDate">The begin of the period</param>
 <param name="toDate">The last inclusive day of the period</param>
 <returns></returns>
 <remarks>
 </remarks>
 <history>
 	[wezel]	10.02.2009	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:CompuMaster.Calendar.WorkDays.CountWeekDays(System.DateTime,System.DateTime,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
 -----------------------------------------------------------------------------
 <summary>
 Count the number of weekdays
 </summary>
 <param name="fromDate">The begin of the period</param>
 <param name="toDate">The last inclusive day of the period</param>
 <param name="countSundays">True if Sundays shall be counted</param>
 <param name="countMondays">True if Monday shall be counted</param>
 <param name="countTuesdays">True if Tuesdays shall be counted</param>
 <param name="countWednesdays">True if Wednesdays shall be counted</param>
 <param name="countThursdays">True if Thursdays shall be counted</param>
 <param name="countFridays">True if Fridays shall be counted</param>
 <param name="countSaturdays">True if Saturdays shall be counted</param>
 <returns></returns>
 <remarks>
 </remarks>
 <history>
 	[wezel]	10.02.2009	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="T:CompuMaster.Calendar.ZeroableMonth">
 <summary>
 A representation for a month period for years with 12 months
 </summary>
 <remarks></remarks>
</member>
<member name="M:CompuMaster.Calendar.ZeroableMonth.Now">
 <summary>
 The current month
 </summary>
 <returns></returns>
</member>
<member name="P:CompuMaster.Calendar.ZeroableMonth.Year">
 <summary>
 The year of the month
 </summary>
</member>
<member name="P:CompuMaster.Calendar.ZeroableMonth.Month">
 <summary>
 The number of the month (Jan = 1, Dec = 12, Unspecified=0)
 </summary>
 <value></value>
 <remarks>
 </remarks>
</member>
<member name="M:CompuMaster.Calendar.ZeroableMonth.Add(System.Int32,System.Int32)">
 <summary>
 Add years and months to a ZeroableMonth, result will always be with a month no. between 1 and 12
 </summary>
 <param name="years"></param>
 <param name="months"></param>
 <returns></returns>
</member>
<member name="M:CompuMaster.Calendar.ZeroableMonth.AddYears(System.Int32)">
 <summary>
 Add years to a ZeroableMonth, result will always keep the month unchanged, so the month no. will be between 0 and 12
 </summary>
 <param name="value"></param>
 <returns></returns>
</member>
<member name="M:CompuMaster.Calendar.ZeroableMonth.AddMonths(System.Int32)">
 <summary>
 Add months to a ZeroableMonth, result will always be with a month no. between 1 and 12
 </summary>
 <param name="value"></param>
 <returns></returns>
</member>
<member name="M:CompuMaster.Calendar.ZeroableMonth.ToString">
 <summary>
 Text formatting with yyyy-MM
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:CompuMaster.Calendar.ZeroableMonth.ToString(System.String)">
 <summary>
 Format the month with a typical datetime format string using the begin date of the period
 </summary>
 <param name="format"></param>
 <returns></returns>
 <remarks>
 </remarks>
</member>
<member name="M:CompuMaster.Calendar.ZeroableMonth.ToString(System.IFormatProvider)">
 <summary>
 Format the month with a typical datetime format using the given format provider and using the begin date of the period
 </summary>
 <param name="provider"></param>
 <returns></returns>
 <remarks>
 </remarks>
</member>
<member name="M:CompuMaster.Calendar.ZeroableMonth.ToString(System.String,System.IFormatProvider)">
 <summary>
 Format the month with a typical datetime format string and the given format provider using the begin date of the period
 </summary>
 <param name="format">YYYY for 4-digit year, YY for 2-digit year, MMMM for long month name, MMM for month name abbreviation, MM for always-2-digit month number, M for month number with 1 or 2 digits</param>
 <param name="provider"></param>
 <returns></returns>
 <remarks>
 </remarks>
</member>
<member name="M:CompuMaster.Calendar.ZeroableMonth.ToString(System.String,System.IFormatProvider,System.String[])">
 <summary>
 Format the month with a typical datetime format string and the given format provider using the begin date of the period
 </summary>
 <param name="format">YYYY for 4-digit year, YY for 2-digit year, MMMM for long month name, MMM for month name abbreviation, MM for always-2-digit month number, M for month number with 1 or 2 digits, UUU for unique short name of month (might depend on system platform), CCC for a custom set of expected names from January to December</param>
 <param name="provider"></param>
 <param name="customMonths">An array of 13 strings reprensenting the expected month names, starting with an element for 0-month followed by January up to December</param>
 <returns></returns>
 <remarks>
 </remarks>
</member>
<member name="M:CompuMaster.Calendar.ZeroableMonth.Parse(System.String,System.String,System.Globalization.CultureInfo)">
 <summary>
 Parse the month from a defined datetime format string and the given culture
 </summary>
 <param name="format">YYYY for 4-digit year, YY for 2-digit year, MMMM for long month name, MMM for month name abbreviation, MM for always-2-digit month number, M for month number with 1 or 2 digits, UUU for unique short name of month (might depend on system platform), CCC for a custom set of expected names from January to December</param>
 <param name="culture"></param>
 <returns></returns>
 <remarks>
 </remarks>
</member>
<member name="M:CompuMaster.Calendar.ZeroableMonth.Parse(System.String,System.String,System.Globalization.CultureInfo,System.String[])">
 <summary>
 Parse the month from a defined datetime format string and the given culture
 </summary>
 <param name="format">YYYY for 4-digit year, YY for 2-digit year, MMMM for long month name, MMM for month name abbreviation, MM for always-2-digit month number, M for month number with 1 or 2 digits, UUU for unique short name of month (might depend on system platform), CCC for a custom set of expected names from January to December</param>
 <param name="culture"></param>
 <param name="customMonths">An array of 13 strings reprensenting the expected month names, starting with an element for 0-month followed by January up to December</param>
 <returns></returns>
 <remarks>
 </remarks>
</member>
<member name="M:CompuMaster.Calendar.ZeroableMonth.TryParse(System.String,CompuMaster.Calendar.ZeroableMonth@)">
 <summary>
 Try to parse the month from datetime format YYYY-MM
 </summary>
 <returns></returns>
 <remarks>
 </remarks>
</member>
<member name="M:CompuMaster.Calendar.ZeroableMonth.TryParse(System.String,System.String,System.Globalization.CultureInfo,CompuMaster.Calendar.ZeroableMonth@)">
 <summary>
 Try to parse the month from a defined datetime format string and the given culture
 </summary>
 <param name="format">YYYY for 4-digit year, YY for 2-digit year, MMMM for long month name, MMM for month name abbreviation, MM for always-2-digit month number, M for month number with 1 or 2 digits, UUU for unique short name of month (might depend on system platform), CCC for a custom set of expected names from January to December</param>
 <param name="culture"></param>
 <returns></returns>
 <remarks>
 </remarks>
</member>
<member name="M:CompuMaster.Calendar.ZeroableMonth.TryParse(System.String,System.String,System.Globalization.CultureInfo,System.String[],CompuMaster.Calendar.ZeroableMonth@)">
 <summary>
 Try to parse the month from a defined datetime format string and the given culture
 </summary>
 <param name="format">YYYY for 4-digit year, YY for 2-digit year, MMMM for long month name, MMM for month name abbreviation, MM for always-2-digit month number, M for month number with 1 or 2 digits, UUU for unique short name of month (might depend on system platform), CCC for a custom set of expected names from January to December</param>
 <param name="culture"></param>
 <param name="customMonths">An array of 12 strings reprensenting the expected month names, starting with January up to December</param>
 <returns></returns>
 <remarks>
 </remarks>
</member>
<member name="M:CompuMaster.Calendar.ZeroableMonth.ParseFromUniqueShortName(System.String)">
 <summary>
 Parse the month from a format string UUU/YYYY
 </summary>
 <returns></returns>
 <remarks>
 </remarks>
</member>
<member name="M:CompuMaster.Calendar.ZeroableMonth.UniqueMonthShortNames">
 <summary>
 All short names in format UUU where UUU equals MMM (English names)
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:CompuMaster.Calendar.ZeroableMonth.UniqueMonthShortName(System.Int32)">
 <summary>
 A short name in format UUU where UUU equals MMM (English names)
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:CompuMaster.Calendar.ZeroableMonth.UniqueShortName">
 <summary>
 A short name in format UUU/YYYY where UUU equals MMM (English names)
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:CompuMaster.Calendar.ZeroableMonth.MonthShortName(System.String)">
 <summary>
 A short name in format MMM/YYYY of specified culture
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:CompuMaster.Calendar.ZeroableMonth.MonthShortName(System.Globalization.CultureInfo)">
 <summary>
 A short name in format MMM/YYYY of specified culture
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:CompuMaster.Calendar.ZeroableMonth.MonthName(System.String)">
 <summary>
 A full month name in format MMMM/YYYY of specified culture
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:CompuMaster.Calendar.ZeroableMonth.MonthName(System.Globalization.CultureInfo)">
 <summary>
 A full month name in format MMMM/YYYY of specified culture
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:CompuMaster.Calendar.ZeroableMonth.Equals(CompuMaster.Calendar.ZeroableMonth)">
 <summary>
 Equals method for period classes
 </summary>
 <param name="value"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:CompuMaster.Calendar.ZeroableMonth.op_Equality(CompuMaster.Calendar.ZeroableMonth,CompuMaster.Calendar.ZeroableMonth)">
 <summary>
 Equals operator for Month classes
 </summary>
 <param name="value1"></param>
 <param name="value2"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:CompuMaster.Calendar.ZeroableMonth.op_Inequality(CompuMaster.Calendar.ZeroableMonth,CompuMaster.Calendar.ZeroableMonth)">
 <summary>
 Not-Equals operator for Month classes
 </summary>
 <param name="value1"></param>
 <param name="value2"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:CompuMaster.Calendar.ZeroableMonth.op_LessThan(CompuMaster.Calendar.ZeroableMonth,CompuMaster.Calendar.ZeroableMonth)">
 <summary>
 Smaller than operator for Month classes
 </summary>
 <param name="value1"></param>
 <param name="value2"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:CompuMaster.Calendar.ZeroableMonth.op_GreaterThan(CompuMaster.Calendar.ZeroableMonth,CompuMaster.Calendar.ZeroableMonth)">
 <summary>
 Greater than operator for Month classes
 </summary>
 <param name="value1"></param>
 <param name="value2"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:CompuMaster.Calendar.ZeroableMonth.op_LessThanOrEqual(CompuMaster.Calendar.ZeroableMonth,CompuMaster.Calendar.ZeroableMonth)">
 <summary>
 Smaller than operator for Month classes
 </summary>
 <param name="value1"></param>
 <param name="value2"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:CompuMaster.Calendar.ZeroableMonth.op_GreaterThanOrEqual(CompuMaster.Calendar.ZeroableMonth,CompuMaster.Calendar.ZeroableMonth)">
 <summary>
 Greater than operator for Month classes
 </summary>
 <param name="value1"></param>
 <param name="value2"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:CompuMaster.Calendar.ZeroableMonth.op_Subtraction(CompuMaster.Calendar.ZeroableMonth,CompuMaster.Calendar.ZeroableMonth)">
 <summary>
 The number of total months between two values
 </summary>
 <param name="value1"></param>
 <param name="value2"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:CompuMaster.Calendar.ZeroableMonth.NextPeriod">
 <summary>
 Create an instance of the following period
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:CompuMaster.Calendar.ZeroableMonth.PreviousPeriod">
 <summary>
 Create an instance of the previous period
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:CompuMaster.Calendar.ZeroableMonth.ZeroPeriod">
 <summary>
 Create an instance of ZeroablePeriod with same year, but month part is zeroed
 </summary>
 <returns></returns>
</member>
<member name="M:CompuMaster.Calendar.ZeroableMonth.FirstPeriod">
 <summary>
 Create an instance of ZeroablePeriod with same year, but first month
 </summary>
 <returns></returns>
</member>
<member name="M:CompuMaster.Calendar.ZeroableMonth.LastPeriod">
 <summary>
 Create an instance of ZeroablePeriod with same year, but last month
 </summary>
 <returns></returns>
</member>
<member name="M:CompuMaster.Calendar.ZeroableMonth.BeginOfPeriod">
 <summary>
 The begin of the month
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:CompuMaster.Calendar.ZeroableMonth.EndOfPeriod(CompuMaster.Calendar.DateInformation.Accuracy)">
 <summary>
 The end of the month
 </summary>
 <param name="precision"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:CompuMaster.Calendar.ZeroableMonth.BeginOfYear">
 <summary>
 The begin of the year
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:CompuMaster.Calendar.ZeroableMonth.EndOfYear">
 <summary>
 The end of the year
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:CompuMaster.Calendar.ZeroableMonth.ZeroMonthOfYear">
 <summary>
 The zero (=undefined) month of the year
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:CompuMaster.Calendar.ZeroableMonth.CompareTo(System.Object)">
 <summary>
 Compares a value to the current instance value
 </summary>
 <param name="obj"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:CompuMaster.Calendar.ZeroableMonth.CompareTo(CompuMaster.Calendar.ZeroableMonth)">
 <summary>
 Compares a value to the current instance value
 </summary>
 <param name="value"></param>
 <returns>0 if value is greater, 2 if value is smaller, 1 if value equals</returns>
 <remarks></remarks>
</member>
</members>
</doc>
