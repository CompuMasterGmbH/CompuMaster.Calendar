Imports NUnit.Framework

Namespace CompuMaster.Test.Calendar

    <TestFixture()> Public Class Month

        <Test> Public Sub Parse()
            Assert.AreEqual("2010-10", CompuMaster.Calendar.Month.Parse("Oct/2010", "MMM/yyyy", System.Globalization.CultureInfo.GetCultureInfo("en-US")).ToString)
            Assert.AreEqual("1900-01", CompuMaster.Calendar.Month.Parse("Jan/1900", "MMM/yyyy", System.Globalization.CultureInfo.GetCultureInfo("en-US")).ToString)
            Assert.AreEqual("9999-12", CompuMaster.Calendar.Month.Parse("Dec/9999", "MMM/yyyy", System.Globalization.CultureInfo.GetCultureInfo("en-US")).ToString)
            Assert.Throws(Of ArgumentException)(Sub()
                                                    CompuMaster.Calendar.Month.Parse(Nothing, "MMM/yyyy", System.Globalization.CultureInfo.GetCultureInfo("en-US"))
                                                End Sub)
            Assert.Throws(Of ArgumentException)(Sub()
                                                    CompuMaster.Calendar.Month.Parse("", "MMM/yyyy", System.Globalization.CultureInfo.GetCultureInfo("en-US"))
                                                End Sub)
            Assert.Throws(Of ArgumentException)(Sub()
                                                    CompuMaster.Calendar.Month.Parse("invalid-value", "MMM/yyyy", System.Globalization.CultureInfo.GetCultureInfo("en-US"))
                                                End Sub)
            Assert.AreEqual("2010-01", CompuMaster.Calendar.Month.Parse("01/2010", "MM/yyyy", System.Globalization.CultureInfo.GetCultureInfo("en-US")).ToString)
            Assert.AreEqual("2010-10", CompuMaster.Calendar.Month.Parse("10/2010", "MM/yyyy", System.Globalization.CultureInfo.GetCultureInfo("en-US")).ToString)
            Assert.AreEqual("2010-01", CompuMaster.Calendar.Month.Parse("1/2010", "M/yyyy", System.Globalization.CultureInfo.GetCultureInfo("en-US")).ToString)
            Assert.AreEqual("2010-01", CompuMaster.Calendar.Month.Parse("01/2010", "M/yyyy", System.Globalization.CultureInfo.GetCultureInfo("en-US")).ToString)
            Assert.AreEqual("2010-10", CompuMaster.Calendar.Month.Parse("10/2010", "MM/yyyy", System.Globalization.CultureInfo.GetCultureInfo("en-US")).ToString)
            Assert.AreEqual("2001-10", CompuMaster.Calendar.Month.Parse("10/01", "MM/yy", System.Globalization.CultureInfo.GetCultureInfo("en-US")).ToString)
            Assert.AreEqual("1999-10", CompuMaster.Calendar.Month.Parse("10/99", "MM/yy", System.Globalization.CultureInfo.GetCultureInfo("en-US")).ToString)
        End Sub

        <Test> Public Sub TryParse()
            Dim Buffer As CompuMaster.Calendar.Month = Nothing
            Assert.AreEqual(True, CompuMaster.Calendar.Month.TryParse("Oct/2010", "MMM/yyyy", System.Globalization.CultureInfo.GetCultureInfo("en-US"), Buffer))
            Assert.AreEqual("2010-10", Buffer.ToString)
            Assert.AreEqual(True, CompuMaster.Calendar.Month.TryParse("Jan/1900", "MMM/yyyy", System.Globalization.CultureInfo.GetCultureInfo("en-US"), Buffer))
            Assert.AreEqual("1900-01", Buffer.ToString)
            Assert.AreEqual(True, CompuMaster.Calendar.Month.TryParse("Dec/9999", "MMM/yyyy", System.Globalization.CultureInfo.GetCultureInfo("en-US"), Buffer))
            Assert.AreEqual("9999-12", Buffer.ToString)
            Assert.AreEqual(True, CompuMaster.Calendar.Month.TryParse("Mrz/2010", "MMM/yyyy", System.Globalization.CultureInfo.GetCultureInfo("de-DE"), Buffer))
            Assert.AreEqual("2010-03", Buffer.ToString)
            Assert.AreEqual(True, CompuMaster.Calendar.Month.TryParse("Okt/2010", "MMM/yyyy", System.Globalization.CultureInfo.GetCultureInfo("de-DE"), Buffer))
            Assert.AreEqual("2010-10", Buffer.ToString)
            Assert.AreEqual(True, CompuMaster.Calendar.Month.TryParse("Jan/1900", "MMM/yyyy", System.Globalization.CultureInfo.GetCultureInfo("de-DE"), Buffer))
            Assert.AreEqual("1900-01", Buffer.ToString)
            Assert.AreEqual(True, CompuMaster.Calendar.Month.TryParse("Dez/9999", "MMM/yyyy", System.Globalization.CultureInfo.GetCultureInfo("de-DE"), Buffer))
            Assert.AreEqual("9999-12", Buffer.ToString)
            Buffer = Nothing
            Assert.AreEqual(False, CompuMaster.Calendar.Month.TryParse(Nothing, "MMM/yyyy", System.Globalization.CultureInfo.GetCultureInfo("en-US"), Buffer))
            Assert.AreEqual(Nothing, Buffer)
            Assert.AreEqual(False, CompuMaster.Calendar.Month.TryParse("", "MMM/yyyy", System.Globalization.CultureInfo.GetCultureInfo("en-US"), Buffer))
            Assert.AreEqual(Nothing, Buffer)
            Assert.AreEqual(False, CompuMaster.Calendar.Month.TryParse("invalid-value", "MMM/yyyy", System.Globalization.CultureInfo.GetCultureInfo("en-US"), Buffer))
            Assert.AreEqual(Nothing, Buffer)
            Assert.AreEqual(True, CompuMaster.Calendar.Month.TryParse("January/1900", "MMMM/yyyy", System.Globalization.CultureInfo.GetCultureInfo("en-US"), Buffer))
            Assert.AreEqual("1900-01", Buffer.ToString)
            Assert.AreEqual(True, CompuMaster.Calendar.Month.TryParse("October/2010", "MMMM/yyyy", System.Globalization.CultureInfo.GetCultureInfo("en-US"), Buffer))
            Assert.AreEqual("2010-10", Buffer.ToString)
            Assert.AreEqual(True, CompuMaster.Calendar.Month.TryParse("1900 January", "yyyy MMMM", System.Globalization.CultureInfo.GetCultureInfo("en-US"), Buffer))
            Assert.AreEqual("1900-01", Buffer.ToString)
            Assert.AreEqual(True, CompuMaster.Calendar.Month.TryParse("2010 October", "yyyy MMMM", System.Globalization.CultureInfo.GetCultureInfo("en-US"), Buffer))
            Assert.AreEqual("2010-10", Buffer.ToString)
            Assert.AreEqual(True, CompuMaster.Calendar.Month.TryParse("01/1900", "MM/yyyy", System.Globalization.CultureInfo.GetCultureInfo("en-US"), Buffer))
            Assert.AreEqual("1900-01", Buffer.ToString)
            Assert.AreEqual(True, CompuMaster.Calendar.Month.TryParse("10/2010", "MM/yyyy", System.Globalization.CultureInfo.GetCultureInfo("en-US"), Buffer))
            Assert.AreEqual("2010-10", Buffer.ToString)
            Assert.AreEqual(True, CompuMaster.Calendar.Month.TryParse("1/1900", "M/yyyy", System.Globalization.CultureInfo.GetCultureInfo("en-US"), Buffer))
            Assert.AreEqual("1900-01", Buffer.ToString)
            Assert.AreEqual(True, CompuMaster.Calendar.Month.TryParse("10/2010", "M/yyyy", System.Globalization.CultureInfo.GetCultureInfo("en-US"), Buffer))
            Assert.AreEqual("2010-10", Buffer.ToString)
        End Sub

        <Test> Public Sub ParseFromUniqueShortName()
            Assert.AreEqual("2010-10", CompuMaster.Calendar.Month.ParseFromUniqueShortName("Oct/2010").ToString)
            Assert.AreEqual("1900-01", CompuMaster.Calendar.Month.ParseFromUniqueShortName("Jan/1900").ToString)
            Assert.AreEqual("9999-12", CompuMaster.Calendar.Month.ParseFromUniqueShortName("Dec/9999").ToString)
        End Sub

        <Test()> Public Sub OperatorMinus()
            Assert.AreEqual(0, New CompuMaster.Calendar.Month(2012, 5) - New CompuMaster.Calendar.Month(2012, 5))
            Assert.AreEqual(1, New CompuMaster.Calendar.Month(2012, 5) - New CompuMaster.Calendar.Month(2012, 4))
            Assert.AreEqual(2, New CompuMaster.Calendar.Month(2012, 5) - New CompuMaster.Calendar.Month(2012, 3))
            Assert.AreEqual(2, New CompuMaster.Calendar.Month(2012, 1) - New CompuMaster.Calendar.Month(2011, 12))
            Assert.AreEqual(4, New CompuMaster.Calendar.Month(2012, 2) - New CompuMaster.Calendar.Month(2011, 11))
            Assert.AreEqual(16, New CompuMaster.Calendar.Month(2012, 2) - New CompuMaster.Calendar.Month(2010, 11))
            Assert.AreEqual(-1, New CompuMaster.Calendar.Month(2012, 4) - New CompuMaster.Calendar.Month(2012, 5))
            Assert.AreEqual(-2, New CompuMaster.Calendar.Month(2012, 3) - New CompuMaster.Calendar.Month(2012, 5))
            Assert.AreEqual(-2, New CompuMaster.Calendar.Month(2011, 12) - New CompuMaster.Calendar.Month(2012, 1))
            Assert.AreEqual(-4, New CompuMaster.Calendar.Month(2011, 11) - New CompuMaster.Calendar.Month(2012, 2))
            Assert.AreEqual(-16, New CompuMaster.Calendar.Month(2010, 11) - New CompuMaster.Calendar.Month(2012, 2))
        End Sub

        <Test()> Public Sub Compares()
            Dim value1 As New CompuMaster.Calendar.Month(2010, 1)
            Dim value2 As New CompuMaster.Calendar.Month(2009, 12)
            Dim value3 As New CompuMaster.Calendar.Month(2010, 1)
            Assert.AreEqual(True, value1 > value2)
            Assert.AreEqual(False, value1 < value2)
            Assert.AreEqual(True, value1 >= value2)
            Assert.AreEqual(False, value1 <= value2)
            Assert.AreEqual(True, value1 >= value3)
            Assert.AreEqual(True, value1 <= value3)
            Assert.AreEqual(True, value1 = value3)
            Assert.AreEqual(value1, value3)
            Assert.AreEqual(False, value1 <> value3)
            Assert.AreEqual(False, value1 > value3)
            Assert.AreEqual(False, value1 < value3)
            Assert.AreNotEqual(Nothing, value3)
            Assert.AreNotEqual(value3, Nothing)
            Assert.AreNotEqual(DBNull.Value, value3)
            Assert.AreNotEqual(value3, DBNull.Value)
            Assert.AreNotEqual(New System.Text.StringBuilder, value3)
            Assert.AreNotEqual(value3, New System.Text.StringBuilder)
            Assert.AreNotEqual(String.Empty, value3)
            Assert.AreNotEqual(value3, String.Empty)
            Assert.AreNotEqual(5, value3)
            Assert.AreNotEqual(value3, 5)
        End Sub

        <Test()> Public Sub MonthNames()
            Dim value1 As New CompuMaster.Calendar.Month(2010, 1)
            Dim value2 As New CompuMaster.Calendar.Month(2009, 12)
            Assert.AreEqual("Jan/2010", value1.UniqueShortName)
            Assert.AreEqual("Dec/2009", value2.UniqueShortName)
            Assert.AreEqual("Jan", value1.MonthShortName(System.Globalization.CultureInfo.GetCultureInfo("en-US")))
            Assert.AreEqual("Dec", value2.MonthShortName(System.Globalization.CultureInfo.GetCultureInfo("en-US")))
            Assert.AreEqual("Jan", value1.MonthShortName(System.Globalization.CultureInfo.GetCultureInfo("de-DE")))
            Assert.AreEqual("Dez", value2.MonthShortName(System.Globalization.CultureInfo.GetCultureInfo("de-DE")))
            Assert.AreEqual("January", value1.MonthName(System.Globalization.CultureInfo.GetCultureInfo("en-US")))
            Assert.AreEqual("December", value2.MonthName(System.Globalization.CultureInfo.GetCultureInfo("en-US")))
            Assert.AreEqual("Januar", value1.MonthName(System.Globalization.CultureInfo.GetCultureInfo("de-DE")))
            Assert.AreEqual("Dezember", value2.MonthName(System.Globalization.CultureInfo.GetCultureInfo("de-DE")))
            Assert.AreEqual("Jan", value1.MonthShortName("en-US"))
            Assert.AreEqual("Dec", value2.MonthShortName("en-US"))
            Assert.AreEqual("January", value1.MonthName("en-US"))
            Assert.AreEqual("December", value2.MonthName("en-US"))
        End Sub

        <Test> Public Sub Add()
            Dim value1 As New CompuMaster.Calendar.Month(2010, 1)
            Dim value2 As New CompuMaster.Calendar.Month(2007, 12)
            Dim value3 As New CompuMaster.Calendar.Month(2017, 12)
            Dim value4 As New CompuMaster.Calendar.Month(2011, 1)
            Dim value5 As New CompuMaster.Calendar.Month(2010, 5)
            Dim value6 As New CompuMaster.Calendar.Month(2009, 5)
            Assert.AreEqual(value4, value1.AddYears(1))
            Assert.AreEqual(value5, value1.AddMonths(4))
            Assert.AreEqual(value6, value1.AddMonths(-8))
            Assert.AreEqual(value3, value1.AddYears(8).AddMonths(-1))
            Assert.AreEqual(value2, value1.AddMonths(-3 * 12 + 11))
            Assert.AreEqual(value2, value1.AddMonths(-2 * 12 + -1))
            Assert.AreEqual(value2, value1.Add(-3, 11))
            Assert.AreEqual(value2, value1.Add(-2, -1))
            Assert.AreEqual(value1, value2.AddMonths(3 * 12 - 11))
            Assert.AreEqual(value1, value2.AddMonths(2 * 12 - -1))
            Assert.AreEqual(value1, value2.Add(3, -11))
            Assert.AreEqual(value1, value2.Add(2, 1))
        End Sub

    End Class

End Namespace