Imports NUnit.Framework

Namespace CompuMaster.Test.Calendar

    <TestFixture()> Public Class MonthTest

        <Test> Public Sub Parse()
            Assert.AreEqual("2010-10", CompuMaster.Calendar.Month.Parse("2010-10").ToString)
            Assert.AreEqual("1900-01", CompuMaster.Calendar.Month.Parse("1900-01").ToString)
            Assert.AreEqual("2010-10", CompuMaster.Calendar.Month.Parse("Oct/2010", "MMM/yyyy", System.Globalization.CultureInfo.GetCultureInfo("en-US")).ToString)
            Assert.AreEqual("1900-01", CompuMaster.Calendar.Month.Parse("Jan/1900", "MMM/yyyy", System.Globalization.CultureInfo.GetCultureInfo("en-US")).ToString)
            Assert.AreEqual("9999-12", CompuMaster.Calendar.Month.Parse("Dec/9999", "MMM/yyyy", System.Globalization.CultureInfo.GetCultureInfo("en-US")).ToString)
            Assert.Throws(Of ArgumentNullException)(Sub()
                                                        CompuMaster.Calendar.Month.Parse(Nothing, "MMM/yyyy", System.Globalization.CultureInfo.GetCultureInfo("en-US"))
                                                    End Sub)
            Assert.Throws(Of ArgumentNullException)(Sub()
                                                        CompuMaster.Calendar.Month.Parse("", "MMM/yyyy", System.Globalization.CultureInfo.GetCultureInfo("en-US"))
                                                    End Sub)
            Assert.Throws(Of ArgumentException)(Sub()
                                                    CompuMaster.Calendar.Month.Parse("invalid-value", "MMM/yyyy", System.Globalization.CultureInfo.GetCultureInfo("en-US"))
                                                End Sub)
            Assert.AreEqual("2010-01", CompuMaster.Calendar.Month.Parse("01/2010", "MM/yyyy", System.Globalization.CultureInfo.GetCultureInfo("en-US")).ToString)
            Assert.AreEqual("2010-10", CompuMaster.Calendar.Month.Parse("10/2010", "MM/yyyy", System.Globalization.CultureInfo.GetCultureInfo("en-US")).ToString)
            Assert.AreEqual("2010-01", CompuMaster.Calendar.Month.Parse("1/2010", "M/yyyy", System.Globalization.CultureInfo.GetCultureInfo("en-US")).ToString)
            Assert.AreEqual("2010-01", CompuMaster.Calendar.Month.Parse("01/2010", "M/yyyy", System.Globalization.CultureInfo.GetCultureInfo("en-US")).ToString)
            Assert.AreEqual("2010-10", CompuMaster.Calendar.Month.Parse("10/2010", "MM/yyyy", System.Globalization.CultureInfo.GetCultureInfo("en-US")).ToString)
            Assert.AreEqual("2001-10", CompuMaster.Calendar.Month.Parse("10/01", "MM/yy", System.Globalization.CultureInfo.GetCultureInfo("en-US")).ToString)
            Assert.AreEqual("1999-10", CompuMaster.Calendar.Month.Parse("10/99", "MM/yy", System.Globalization.CultureInfo.GetCultureInfo("en-US")).ToString)
        End Sub

        <Test> Public Sub TryParse()
            Dim Buffer As CompuMaster.Calendar.Month = Nothing
            Assert.AreEqual(True, CompuMaster.Calendar.Month.TryParse("Oct/2010", "MMM/yyyy", System.Globalization.CultureInfo.GetCultureInfo("en-US"), Buffer), "#010")
            Assert.AreEqual("2010-10", Buffer.ToString, "#020")
            Assert.AreEqual(True, CompuMaster.Calendar.Month.TryParse("Jan/1900", "MMM/yyyy", System.Globalization.CultureInfo.GetCultureInfo("en-US"), Buffer), "#011")
            Assert.AreEqual("1900-01", Buffer.ToString, "#021")
            Assert.AreEqual(True, CompuMaster.Calendar.Month.TryParse("Dec/9999", "MMM/yyyy", System.Globalization.CultureInfo.GetCultureInfo("en-US"), Buffer), "#012")
            Assert.AreEqual("9999-12", Buffer.ToString, "#022")
            Dim ExpectedMarchShortNameOnCurrentPlatform As String = New DateTime(2010, 3, 1).ToString("MMM""/""yyyy") 'Linux systems/Mono: "Mär", Windows systems: "Mrz"
            System.Console.WriteLine("SPECIAL CASE HANDLING: month March in German culture appears differently between windows and linux/mono systems")
            System.Console.WriteLine("SPECIAL CASE HANDLING: month March in German culture expected as """ & ExpectedMarchShortNameOnCurrentPlatform & """")
            Assert.AreEqual(True, CompuMaster.Calendar.Month.TryParse(ExpectedMarchShortNameOnCurrentPlatform, "MMM/yyyy", System.Globalization.CultureInfo.GetCultureInfo("de-DE"), Buffer), "#013")
            Assert.AreEqual("2010-03", Buffer.ToString, "#023")
            Assert.AreEqual(True, CompuMaster.Calendar.Month.TryParse("Okt/2010", "MMM/yyyy", System.Globalization.CultureInfo.GetCultureInfo("de-DE"), Buffer), "#014")
            Assert.AreEqual("2010-10", Buffer.ToString, "#024")
            Assert.AreEqual(True, CompuMaster.Calendar.Month.TryParse("Jan/1900", "MMM/yyyy", System.Globalization.CultureInfo.GetCultureInfo("de-DE"), Buffer), "#015")
            Assert.AreEqual("1900-01", Buffer.ToString, "#025")
            Assert.AreEqual(True, CompuMaster.Calendar.Month.TryParse("Dez/9999", "MMM/yyyy", System.Globalization.CultureInfo.GetCultureInfo("de-DE"), Buffer), "#016")
            Assert.AreEqual("9999-12", Buffer.ToString, "#026")
            Buffer = Nothing
            Assert.AreEqual(False, CompuMaster.Calendar.Month.TryParse(Nothing, "MMM/yyyy", System.Globalization.CultureInfo.GetCultureInfo("en-US"), Buffer), "#030")
            Assert.AreEqual(Nothing, Buffer, "#050")
            Assert.AreEqual(False, CompuMaster.Calendar.Month.TryParse("", "MMM/yyyy", System.Globalization.CultureInfo.GetCultureInfo("en-US"), Buffer), "#031")
            Assert.AreEqual(Nothing, Buffer, "#051")
            Assert.AreEqual(False, CompuMaster.Calendar.Month.TryParse("invalid-value", "MMM/yyyy", System.Globalization.CultureInfo.GetCultureInfo("en-US"), Buffer), "#032")
            Assert.AreEqual(Nothing, Buffer, "#052")
            Assert.AreEqual(True, CompuMaster.Calendar.Month.TryParse("January/1900", "MMMM/yyyy", System.Globalization.CultureInfo.GetCultureInfo("en-US"), Buffer), "#033")
            Assert.AreEqual("1900-01", Buffer.ToString, "#053")
            Assert.AreEqual(True, CompuMaster.Calendar.Month.TryParse("October/2010", "MMMM/yyyy", System.Globalization.CultureInfo.GetCultureInfo("en-US"), Buffer), "#034")
            Assert.AreEqual("2010-10", Buffer.ToString, "#054")
            Assert.AreEqual(True, CompuMaster.Calendar.Month.TryParse("1900 January", "yyyy MMMM", System.Globalization.CultureInfo.GetCultureInfo("en-US"), Buffer), "#035")
            Assert.AreEqual("1900-01", Buffer.ToString, "#055")
            Assert.AreEqual(True, CompuMaster.Calendar.Month.TryParse("2010 October", "yyyy MMMM", System.Globalization.CultureInfo.GetCultureInfo("en-US"), Buffer), "#036")
            Assert.AreEqual("2010-10", Buffer.ToString, "#056")
            Assert.AreEqual(True, CompuMaster.Calendar.Month.TryParse("01/1900", "MM/yyyy", System.Globalization.CultureInfo.GetCultureInfo("en-US"), Buffer), "#037")
            Assert.AreEqual("1900-01", Buffer.ToString, "#057")
            Assert.AreEqual(True, CompuMaster.Calendar.Month.TryParse("10/2010", "MM/yyyy", System.Globalization.CultureInfo.GetCultureInfo("en-US"), Buffer), "#038")
            Assert.AreEqual("2010-10", Buffer.ToString, "#058")
            Assert.AreEqual(True, CompuMaster.Calendar.Month.TryParse("1/1900", "M/yyyy", System.Globalization.CultureInfo.GetCultureInfo("en-US"), Buffer), "#039")
            Assert.AreEqual("1900-01", Buffer.ToString, "#059")
            Assert.AreEqual(True, CompuMaster.Calendar.Month.TryParse("10/2010", "M/yyyy", System.Globalization.CultureInfo.GetCultureInfo("en-US"), Buffer), "#040")
            Assert.AreEqual("2010-10", Buffer.ToString, "#060")
        End Sub

        <Test> Public Sub Conversions()
            Assert.AreEqual("2020-10", CType(New CompuMaster.Calendar.Month(2020, 10), String))
            Assert.AreEqual(Nothing, CType(CType(Nothing, CompuMaster.Calendar.Month), String))
            Assert.AreEqual(Nothing, CType(CType(Nothing, String), CompuMaster.Calendar.Month))
            Assert.AreEqual(Nothing, CType(String.Empty, CompuMaster.Calendar.Month))
            Assert.AreEqual("2020-10", CType("2020-10", CompuMaster.Calendar.Month).ToString)
        End Sub

        <Test> Public Sub ParseFromUniqueShortName()
            Assert.AreEqual("2010-10", CompuMaster.Calendar.Month.ParseFromUniqueShortName("Oct/2010").ToString)
            Assert.AreEqual("1900-01", CompuMaster.Calendar.Month.ParseFromUniqueShortName("Jan/1900").ToString)
            Assert.AreEqual("9999-12", CompuMaster.Calendar.Month.ParseFromUniqueShortName("Dec/9999").ToString)
        End Sub

        <Test> Public Sub UniqueShortName()
            Assert.AreEqual("Oct/2010", (New CompuMaster.Calendar.Month("2010-10")).UniqueShortName)
            Assert.AreEqual("Jan/1900", (New CompuMaster.Calendar.Month("1900-01")).UniqueShortName)
            Assert.AreEqual("Dec/9999", (New CompuMaster.Calendar.Month("9999-12")).UniqueShortName)
        End Sub

        <Test()> Public Sub OperatorMinus()
            Assert.AreEqual(0, New CompuMaster.Calendar.Month(2012, 5) - New CompuMaster.Calendar.Month(2012, 5))
            Assert.AreEqual(1, New CompuMaster.Calendar.Month(2012, 5) - New CompuMaster.Calendar.Month(2012, 4))
            Assert.AreEqual(2, New CompuMaster.Calendar.Month(2012, 5) - New CompuMaster.Calendar.Month(2012, 3))
            Assert.AreEqual(1, New CompuMaster.Calendar.Month(2012, 1) - New CompuMaster.Calendar.Month(2011, 12))
            Assert.AreEqual(3, New CompuMaster.Calendar.Month(2012, 2) - New CompuMaster.Calendar.Month(2011, 11))
            Assert.AreEqual(15, New CompuMaster.Calendar.Month(2012, 2) - New CompuMaster.Calendar.Month(2010, 11))
            Assert.AreEqual(21, New CompuMaster.Calendar.Month(2012, 11) - New CompuMaster.Calendar.Month(2011, 2))
            Assert.AreEqual(33, New CompuMaster.Calendar.Month(2012, 11) - New CompuMaster.Calendar.Month(2010, 2))
            Assert.AreEqual(-1, New CompuMaster.Calendar.Month(2012, 4) - New CompuMaster.Calendar.Month(2012, 5))
            Assert.AreEqual(-2, New CompuMaster.Calendar.Month(2012, 3) - New CompuMaster.Calendar.Month(2012, 5))
            Assert.AreEqual(-1, New CompuMaster.Calendar.Month(2011, 12) - New CompuMaster.Calendar.Month(2012, 1))
            Assert.AreEqual(-3, New CompuMaster.Calendar.Month(2011, 11) - New CompuMaster.Calendar.Month(2012, 2))
            Assert.AreEqual(-15, New CompuMaster.Calendar.Month(2010, 11) - New CompuMaster.Calendar.Month(2012, 2))
            Assert.AreEqual(12, New CompuMaster.Calendar.Month(2020, 1) - New CompuMaster.Calendar.Month(2019, 1))
            Assert.AreEqual(-12, New CompuMaster.Calendar.Month(2019, 1) - New CompuMaster.Calendar.Month(2020, 1))
            Assert.AreEqual(24, New CompuMaster.Calendar.Month(2021, 1) - New CompuMaster.Calendar.Month(2019, 1))
            Assert.AreEqual(-24, New CompuMaster.Calendar.Month(2018, 1) - New CompuMaster.Calendar.Month(2020, 1))
        End Sub

        <Test()> Public Sub Compares()
            Dim value1 As New CompuMaster.Calendar.Month(2010, 1)
            Dim value2 As New CompuMaster.Calendar.Month(2009, 12)
            Dim value3 As New CompuMaster.Calendar.Month(2010, 1)
            Assert.AreEqual(True, value1 > value2)
            Assert.AreEqual(False, value1 < value2)
            Assert.AreEqual(True, value1 >= value2)
            Assert.AreEqual(False, value1 <= value2)
            Assert.AreEqual(True, value1 >= value3)
            Assert.AreEqual(True, value1 <= value3)
            Assert.AreEqual(True, value1 = value3)
            Assert.AreEqual(value1, value3)
            Assert.AreEqual(False, value1 <> value3)
            Assert.AreEqual(False, value1 > value3)
            Assert.AreEqual(False, value1 < value3)
            Assert.AreNotEqual(Nothing, value3)
            Assert.AreNotEqual(value3, Nothing)
            Assert.AreNotEqual(DBNull.Value, value3)
            Assert.AreNotEqual(value3, DBNull.Value)
            Assert.AreNotEqual(New System.Text.StringBuilder, value3)
            Assert.AreNotEqual(value3, New System.Text.StringBuilder)
            Assert.AreNotEqual(String.Empty, value3)
            Assert.AreNotEqual(value3, String.Empty)
            Assert.AreNotEqual(5, value3)
            Assert.AreNotEqual(value3, 5)
            value1 = Nothing
            value2 = Nothing
            Assert.AreEqual(True, value1 = value2)
            Assert.AreEqual(False, value1 <> value2)
            Assert.AreEqual(False, value1 < value2)
            Assert.AreEqual(False, value1 > value2)
            Assert.AreEqual(True, value1 <= value2)
            Assert.AreEqual(True, value1 >= value2)
            Assert.AreEqual(False, value1 = value3)
            Assert.AreEqual(True, value1 <> value3)
            Assert.AreEqual(True, value1 < value3)
            Assert.AreEqual(False, value1 > value3)
            Assert.AreEqual(True, value1 <= value3)
            Assert.AreEqual(False, value1 >= value3)
            Assert.AreEqual(False, value3 = value2)
            Assert.AreEqual(True, value3 <> value2)
            Assert.AreEqual(False, value3 < value2)
            Assert.AreEqual(True, value3 > value2)
            Assert.AreEqual(False, value3 <= value2)
            Assert.AreEqual(True, value3 >= value2)
        End Sub

        <Test()> Public Sub MonthNames()
            Dim value1 As New CompuMaster.Calendar.Month(2010, 1)
            Dim value2 As New CompuMaster.Calendar.Month(2009, 12)
            Assert.AreEqual("Jan/2010", value1.UniqueShortName)
            Assert.AreEqual("Dec/2009", value2.UniqueShortName)
            Assert.AreEqual("Jan", value1.MonthShortName(System.Globalization.CultureInfo.GetCultureInfo("en-US")))
            Assert.AreEqual("Dec", value2.MonthShortName(System.Globalization.CultureInfo.GetCultureInfo("en-US")))
            Assert.AreEqual("Jan", value1.MonthShortName(System.Globalization.CultureInfo.GetCultureInfo("de-DE")))
            Assert.AreEqual("Dez", value2.MonthShortName(System.Globalization.CultureInfo.GetCultureInfo("de-DE")))
            Assert.AreEqual("January", value1.MonthName(System.Globalization.CultureInfo.GetCultureInfo("en-US")))
            Assert.AreEqual("December", value2.MonthName(System.Globalization.CultureInfo.GetCultureInfo("en-US")))
            Assert.AreEqual("Januar", value1.MonthName(System.Globalization.CultureInfo.GetCultureInfo("de-DE")))
            Assert.AreEqual("Dezember", value2.MonthName(System.Globalization.CultureInfo.GetCultureInfo("de-DE")))
            Assert.AreEqual("Jan", value1.MonthShortName("en-US"))
            Assert.AreEqual("Dec", value2.MonthShortName("en-US"))
            Assert.AreEqual("January", value1.MonthName("en-US"))
            Assert.AreEqual("December", value2.MonthName("en-US"))
        End Sub

        <Test> Public Sub Add()
            Dim value1 As New CompuMaster.Calendar.Month(2010, 1)
            Dim value2 As New CompuMaster.Calendar.Month(2007, 12)
            Dim value3 As New CompuMaster.Calendar.Month(2017, 12)
            Dim value4 As New CompuMaster.Calendar.Month(2011, 1)
            Dim value5 As New CompuMaster.Calendar.Month(2010, 5)
            Dim value6 As New CompuMaster.Calendar.Month(2009, 5)
            Assert.AreEqual(value4, value1.AddYears(1))
            Assert.AreEqual(value5, value1.AddMonths(4))
            Assert.AreEqual(value6, value1.AddMonths(-8))
            Assert.AreEqual(value3, value1.AddYears(8).AddMonths(-1))
            Assert.AreEqual(value2, value1.AddMonths(-3 * 12 + 11))
            Assert.AreEqual(value2, value1.AddMonths(-2 * 12 + -1))
            Assert.AreEqual(value2, value1.Add(-3, 11))
            Assert.AreEqual(value2, value1.Add(-2, -1))
            Assert.AreEqual(value1, value2.AddMonths(3 * 12 - 11))
            Assert.AreEqual(value1, value2.AddMonths(2 * 12 - -1))
            Assert.AreEqual(value1, value2.Add(3, -11))
            Assert.AreEqual(value1, value2.Add(2, 1))
            Assert.AreEqual(New CompuMaster.Calendar.Month(2009, 12), value1.AddMonths(-1))
            Assert.AreEqual(New CompuMaster.Calendar.Month(2009, 2), value1.AddMonths(-11))
            Assert.AreEqual(New CompuMaster.Calendar.Month(2009, 1), value1.AddMonths(-12))
            Assert.AreEqual(New CompuMaster.Calendar.Month(2008, 12), value1.AddMonths(-13))
        End Sub

        <Test> Public Sub Min()
            Dim value0 As CompuMaster.Calendar.Month = Nothing
            Dim value0initialized As New CompuMaster.Calendar.Month
            Dim value1 As New CompuMaster.Calendar.Month(2010, 1)
            Dim value2 As New CompuMaster.Calendar.Month(2007, 12)
            Dim value3 As New CompuMaster.Calendar.Month(2017, 12)
            Dim value4 As New CompuMaster.Calendar.Month(2011, 1)
            Dim value5 As New CompuMaster.Calendar.Month(2010, 5)
            Dim value6 As New CompuMaster.Calendar.Month(2009, 5)
            Assert.AreEqual(value0, CompuMaster.Calendar.Month.min(value0, value0))
            Assert.AreEqual(value0, CompuMaster.Calendar.Month.min(value0, value1))
            Assert.AreEqual(value0, CompuMaster.Calendar.Month.min(value1, value0))
            Assert.AreEqual(value0, CompuMaster.Calendar.Month.Min(value0initialized, value0))
            Assert.AreEqual(value0, CompuMaster.Calendar.Month.Min(value0, value0initialized))
            Assert.AreEqual(value1, CompuMaster.Calendar.Month.Min(value1, value1))
            Assert.AreEqual(value2, CompuMaster.Calendar.Month.min(value1, value2))
            Assert.AreEqual(value1, CompuMaster.Calendar.Month.min(value1, value3))
            Assert.AreEqual(value1, CompuMaster.Calendar.Month.min(value1, value4))
            Assert.AreEqual(value1, CompuMaster.Calendar.Month.min(value1, value5))
            Assert.AreEqual(value1, CompuMaster.Calendar.Month.min(value5, value1))
            Assert.AreEqual(value6, CompuMaster.Calendar.Month.min(value1, value6))
        End Sub

        <Test> Public Sub Max()
            Dim value0 As CompuMaster.Calendar.Month = Nothing
            Dim value0initialized As New CompuMaster.Calendar.Month
            Dim value1 As New CompuMaster.Calendar.Month(2010, 1)
            Dim value2 As New CompuMaster.Calendar.Month(2007, 12)
            Dim value3 As New CompuMaster.Calendar.Month(2017, 12)
            Dim value4 As New CompuMaster.Calendar.Month(2011, 1)
            Dim value5 As New CompuMaster.Calendar.Month(2010, 5)
            Dim value6 As New CompuMaster.Calendar.Month(2009, 5)
            Assert.AreEqual(value0, CompuMaster.Calendar.Month.max(value0, value0))
            Assert.AreEqual(value1, CompuMaster.Calendar.Month.Max(value0, value1))
            Assert.AreEqual(value1, CompuMaster.Calendar.Month.Max(value1, value0))
            Assert.AreEqual(value0initialized, CompuMaster.Calendar.Month.Max(value0initialized, value0))
            Assert.AreEqual(value0initialized, CompuMaster.Calendar.Month.Max(value0, value0initialized))
            Assert.AreEqual(value1, CompuMaster.Calendar.Month.Max(value1, value1))
            Assert.AreEqual(value1, CompuMaster.Calendar.Month.Max(value1, value2))
            Assert.AreEqual(value3, CompuMaster.Calendar.Month.Max(value1, value3))
            Assert.AreEqual(value4, CompuMaster.Calendar.Month.Max(value1, value4))
            Assert.AreEqual(value5, CompuMaster.Calendar.Month.Max(value1, value5))
            Assert.AreEqual(value5, CompuMaster.Calendar.Month.Max(value5, value1))
            Assert.AreEqual(value1, CompuMaster.Calendar.Month.Max(value1, value6))
        End Sub

        <Test> Public Sub SmallerBiggerEquals()
            Assert.Multiple(Sub()
                                Assert.IsTrue(New CompuMaster.Calendar.Month(2010, 9) = New CompuMaster.Calendar.Month(2010, 9))
                                Assert.IsTrue(New CompuMaster.Calendar.Month(2010, 1) <> New CompuMaster.Calendar.Month(2010, 9))
                                Assert.IsTrue(New CompuMaster.Calendar.Month(2010, 1) < New CompuMaster.Calendar.Month(2010, 9))
                                Assert.IsTrue(New CompuMaster.Calendar.Month(2010, 9) > New CompuMaster.Calendar.Month(2010, 1))
                                Assert.IsFalse(New CompuMaster.Calendar.Month(2010, 9) <> New CompuMaster.Calendar.Month(2010, 9))
                                Assert.IsFalse(New CompuMaster.Calendar.Month(2010, 1) = New CompuMaster.Calendar.Month(2010, 9))
                                Assert.IsFalse(New CompuMaster.Calendar.Month(2010, 1) > New CompuMaster.Calendar.Month(2010, 9))
                                Assert.IsFalse(New CompuMaster.Calendar.Month(2010, 9) < New CompuMaster.Calendar.Month(2010, 1))

                                Assert.AreEqual(New CompuMaster.Calendar.Month(2010, 9), New CompuMaster.Calendar.Month(2010, 9))
                                Assert.AreNotEqual(New CompuMaster.Calendar.Month(2010, 1), New CompuMaster.Calendar.Month(2010, 9))
                                Assert.Less(New CompuMaster.Calendar.Month(2010, 1), New CompuMaster.Calendar.Month(2010, 9))
                                Assert.Greater(New CompuMaster.Calendar.Month(2010, 9), New CompuMaster.Calendar.Month(2010, 1))
                                Assert.That(New CompuMaster.Calendar.Month(2010, 1), NUnit.Framework.Is.LessThan(New CompuMaster.Calendar.Month(2010, 9)))
                                Assert.That(New CompuMaster.Calendar.Month(2010, 9), NUnit.Framework.Is.GreaterThan(New CompuMaster.Calendar.Month(2010, 1)))
                            End Sub)
        End Sub

        <Test> Public Sub Sorting()
            Dim Values As New Generic.List(Of CompuMaster.Calendar.Month)
            Values.Add(New CompuMaster.Calendar.Month(2010, 11))
            Values.Add(New CompuMaster.Calendar.Month(1999, 10))
            Values.Add(New CompuMaster.Calendar.Month(2010, 10))
            Values.Add(New CompuMaster.Calendar.Month)
            Values.Add(New CompuMaster.Calendar.Month(2010, 9))

            Values.Sort()

            Assert.AreEqual(New CompuMaster.Calendar.Month, Values(0))
            Assert.AreEqual(New CompuMaster.Calendar.Month(1999, 10), Values(1))
            Assert.AreEqual(New CompuMaster.Calendar.Month(2010, 9), Values(2))
            Assert.AreEqual(New CompuMaster.Calendar.Month(2010, 10), Values(3))
            Assert.AreEqual(New CompuMaster.Calendar.Month(2010, 11), Values(4))
        End Sub

    End Class

End Namespace